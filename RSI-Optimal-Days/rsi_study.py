# -*- coding: utf-8 -*-
"""RSI_Study.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cScl4UnZZIypee0S3_3YueRxOqjZ0wUI
"""

import pandas as pd
import matplotlib.pyplot as plt

# %matplotlib inline

!pip install stockstats
from stockstats import StockDataFrame as Sdf

from sklearn.model_selection import cross_val_score
from sklearn.linear_model import LinearRegression

data1 = pd.read_csv("AAPL.csv")
data2 = pd.read_csv("FB.csv")
data3 = pd.read_csv("TSLA.csv")

stock1 = Sdf.retype(data1)
stock2 = Sdf.retype(data2)
stock3 = Sdf.retype(data3)

for i in range(20, 51):
  data1['rsi' + str(i)] = stock1['rsi_' + str(i)]
  data2['rsi' + str(i)] = stock2['rsi_' + str(i)]
  data3['rsi' + str(i)] = stock3['rsi_' + str(i)]
  if i % 10 == 1:
    print(i // 10)

data1.head()

scores1 = []
scores2 = []
scores3 = []
coefs1 = []
coefs2 = []
coefs3 = []

for i in range(20, 51):
  X1 = data1['rsi' + str(i)].shift(10).dropna()
  y1 = data1['adj close'][11:]
  X2 = data2['rsi' + str(i)].shift(10).dropna()
  y2 = data2['adj close'][11:]
  X3 = data3['rsi' + str(i)].shift(10).dropna()
  y3 = data3['adj close'][11:]
   
  lr1 = LinearRegression()
  lr2 = LinearRegression()
  lr3 = LinearRegression()
  
  lr1.fit(X1.values.reshape(-1, 1), y1.values.reshape(-1, 1))
  lr2.fit(X2.values.reshape(-1, 1), y2.values.reshape(-1, 1))
  lr3.fit(X3.values.reshape(-1, 1), y3.values.reshape(-1, 1))
  
  coefs1.append(lr1.coef_[0])
  coefs2.append(lr2.coef_[0])
  coefs3.append(lr3.coef_[0])
  
  score1 = cross_val_score(lr1, X1.values.reshape(-1, 1), y1.values.reshape(-1, 1), cv=5, n_jobs=-1, scoring='neg_mean_squared_error')
  score2 = cross_val_score(lr2, X2.values.reshape(-1, 1), y2.values.reshape(-1, 1), cv=5, n_jobs=-1, scoring='neg_mean_squared_error')
  score3 = cross_val_score(lr3, X3.values.reshape(-1, 1), y2.values.reshape(-1, 1), cv=5, n_jobs=-1, scoring='neg_mean_squared_error')
  
  scores1.append(score1.mean())
  scores2.append(score2.mean())
  scores3.append(score3.mean())
  
  if i % 10 == 0:
    print(i // 10)

scores1

axes = plt.gca()
axes.set_ylim([66, 68])
plt.xticks(rotation=90)
plt.title("AAPL Mean Squared Error of RSI ranging from 20 to 50 days")
plt.bar([str(i) for i in range(20, 51)], [abs(a) for a in scores1], width=.5, color='red')

scores2

axes = plt.gca()
axes.set_ylim([2750, 3060])
plt.xticks(rotation=90)
plt.title("FB Mean Squared Error of RSI from 20 to 50 days")
plt.bar([str(i) for i in range(20, 51)], [abs(a) for a in scores2], width=.5, color='blue')

scores3

axes = plt.gca()
axes.set_ylim([2750, 3060])
plt.xticks(rotation=90)
plt.title("TSLA Mean Squared Error of RSI from 20 to 50 days")
plt.bar([str(i) for i in range(20, 51)], [abs(a) for a in scores2], width=.5, color='blue')

"""**Conclusion** 

            RSI is not a very good indicator unless the stock has very low voltality (but most of the time, RSI is a *terrible* indicator).
            
            If the stock doesn't have a very high voltality, then the number of days used for RSI doesn't really matter.  However most of the time, the less days that are used for RSI, the better.  
            
            ***DISCLAIMER***: RSI is a very bad indicator due to it being overused by traders.
"""